name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'  # 当推送版本标签时触发，如 v1.0.0

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build and package (Windows)
      if: matrix.os == 'windows-latest'
      run: npm run build:win
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Build and package (macOS)
      if: matrix.os == 'macos-latest'
      run: npm run build:mac
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Build and package (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: npm run build:linux
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload artifacts (Windows)
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: windows-build
        path: dist/*.exe
        
    - name: Upload artifacts (macOS)
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v4
      with:
        name: macos-build
        path: dist/*.dmg
        
    - name: Upload artifacts (Linux)
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: linux-build
        path: dist/*.AppImage

  release:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Get version from tag
      id: get_version
      run: |
        echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        name: PPT标签管理器 v${{ steps.get_version.outputs.version }}
        body: |
          ## PPT标签管理器 v${{ steps.get_version.outputs.version }}
          
          ### 新功能
          - PPT文件标签管理
          - 文件预览功能
          - 智能缓存机制
          - 现代化用户界面
          
          ### 下载说明
          - **Windows**: 下载 `.exe` 文件直接安装
          - **macOS**: 下载 `.dmg` 文件安装
          - **Linux**: 下载 `.AppImage` 文件，添加执行权限后运行
          
          ### 系统要求
          - Windows 10/11 (64位)
          - macOS 10.15+ (64位)
          - Linux (64位)
          - 可选：LibreOffice（用于PPT预览功能）
        files: |
          windows-build/*
          macos-build/*
          linux-build/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}